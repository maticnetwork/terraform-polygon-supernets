---
- name: Create the geth group
  ansible.builtin.group:
    name: geth-group
    state: present

- name: Add the geth user to the geth group
  ansible.builtin.user:
    name: geth
    groups: geth-group
    comment: geth Application user

- name: Create the geth config directory
  ansible.builtin.file:
    path: /etc/geth
    state: directory
    owner: geth
    group: geth-group
    recurse: true
    mode: 0750

- name: Create the state directory
  ansible.builtin.file:
    path: /var/lib/geth
    state: directory
    owner: geth
    group: geth-group
    recurse: true
    mode: 0750

- name: Install go
  ansible.builtin.include_tasks: go.yml

- name: Clone geth repo
  ansible.builtin.git:
    repo: https://github.com/ethereum/go-ethereum
    dest: /opt/go-ethereum
    version: "{{ geth_tag }}"
    force: true

- name: Build geth
  ansible.builtin.shell: |
    pushd /opt/go-ethereum
    make all
    popd
  args:
    executable: /bin/bash
    creates: /opt/go-ethereum/build/bin/geth

- name: Copy geth to bin dir
  ansible.builtin.copy:
    src: /opt/go-ethereum/build/bin/geth
    dest: /usr/local/bin/geth
    remote_src: true
    mode: 0755

- name: Create the clique genesis
  ansible.builtin.template:
    src: genesis.json
    dest: /etc/geth/genesis.json
    mode: "0640"

- name: Setup geth
  ansible.builtin.shell: |
    polycli nodekey --ip $(hostname -I | head -n 1) > /etc/geth/nodekey.json
    hostname | awk -F. '{print $1}' | sed 's/.*-0*//' > /etc/geth/host.index
    polycli wallet inspect --addresses 20 --mnemonic "{{ geth_miner_mnemonic }}" | jq -r '.Addresses['$(cat /etc/geth/host.index)'-1]' > /etc/geth/polykey.json
    cat /etc/geth/polykey.json | jq -r '.HexPrivateKey' | tr -d "\n" > /etc/geth/privkey
    head -c 32 < /dev/urandom | polycli hash keccak256 | tr -d "\n" > /etc/geth/password
    geth init --datadir /var/lib/geth /etc/geth/genesis.json
    geth account import --password /etc/geth/password --keystore /var/lib/geth/keystore /etc/geth/privkey
    cat /etc/geth/nodekey.json  | jq -r '.PrivateKey' | tr -d "\n" > /var/lib/geth/geth/nodekey
    chown -R geth:geth-group /etc/geth
    chown -R geth:geth-group /var/lib/geth
  args:
    executable: /bin/bash
    creates: /var/lib/geth/keystore

- name: Get ETH Address
  ansible.builtin.shell: cat /etc/geth/polykey.json  | jq -r ".ETHAddress" | tr -d "\n"
  register: derived_wallet_address
  changed_when: false

- name: Display eth address
  ansible.builtin.debug:
    msg: "{{ derived_wallet_address.stdout }}"

- name: Get ENR
  ansible.builtin.shell: cat /etc/geth/nodekey.json | jq -r '.ENR' | tr -d "\n"
  register: root_enrs
  changed_when: false

- name: Display ENRS
  ansible.builtin.set_fact:
    rootchain_bootnodes: "{{ ansible_play_hosts | map('extract', hostvars, 'root_enrs') | map(attribute='stdout') | list }}"
  run_once: true

- name: Create the geth toml
  ansible.builtin.template:
    src: config.toml
    dest: /etc/geth/config.toml
    mode: "0644"

- name: Create the geth systemd file
  ansible.builtin.template:
    src: geth.service
    dest: /etc/systemd/system/geth.service
    mode: 0644

# something is wonky here with the peering. Ideally these could be spaced out in some way?
- name: Restart Geth Service to do initialization
  throttle: 1
  ansible.builtin.systemd:
    state: restarted
    name: geth
    enabled: true
    daemon_reload: true

- name: Pause while geth starts
  ansible.builtin.pause:
    seconds: 5

- name: Restart Geth Service to actually run
  throttle: 1
  ansible.builtin.systemd:
    state: restarted
    name: geth
    enabled: true
    daemon_reload: true

